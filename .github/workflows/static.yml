# Simple workflow for deploying static content to GitHub Pages
name: CI / Deploy (Pages)

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "ci-deploy"
  cancel-in-progress: false

jobs:
  lint:
    name: Lint & Typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install (workspace)
        working-directory: src/app
        run: npm ci
      - name: Run ESLint
        working-directory: src/app
        run: npm run lint || true

  test:
    name: Test (placeholder)
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install (workspace)
        working-directory: src/app
        run: npm ci
      - name: Run tests
        working-directory: src/app
        run: npm run test

  build:
    name: Build (static export)
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: |
            src/app/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('src/app/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Cache .next
        uses: actions/cache@v4
        with:
          path: src/app/.next/cache
          key: ${{ runner.os }}-next-${{ hashFiles('src/app/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-next-
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install dependencies (src/app)
        working-directory: src/app
        run: npm ci
      - name: Build and export (src/app)
        working-directory: src/app
        run: npm run build:static
      - name: Archive static output
        uses: actions/upload-artifact@v4
        with:
          name: pages-out
          path: src/app/out

  deploy-pages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: pages-out
          path: src/app/out
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'src/app/out'
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4

  # Optional: Cloudflare / Vercel deploy placeholders
  deploy-cloudflare:
    name: (optional) Deploy to Cloudflare Pages
    runs-on: ubuntu-latest
    if: false
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Wrangler
        run: npm i -g wrangler
      - name: Upload to Cloudflare Pages
        run: |
          # Placeholder: configure CF account and use `wrangler pages publish out-pages` or opennext
          echo "Add your Cloudflare deploy step here"

  deploy-vercel:
    name: (optional) Deploy to Vercel
    runs-on: ubuntu-latest
    if: false
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Vercel Deploy (placeholder)
        run: echo "Add Vercel CLI deploy here; use VERCEL_TOKEN secret"
